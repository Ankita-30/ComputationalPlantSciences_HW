'''
We have tried to do it using two definitions: collision ad crossing paths.

Collision:

Define an array (200x200) with value 0 at every position.

Define step choices in four perpendicular directions of unit 1 and store them in a list.

We have two walkers randomly taking steps from [50,50] and [75,75].

We define count and initialize it to 0.

Whenever the two walkers collide or are at the same position at the same time, we increase the count by 1.

We make them take 6000 steps.

At the end, we report the mean, variance and standard deviation of c since we see a range of values which cannot be captured by running the code just once.

Crossing Paths:

Define an array (200x200) with value 0 at every position.

Define step choices in four perpendicular directions of unit 1 and store them in a list.

We have two walkers randomly taking steps from [50,50] and [75,75].

We define count and initialize it to 0.

We trace the path of walker1 emerging from [50,50] by making the values of its path (or positions in the array)=1.

Then we check if walker two crosses walker1's path. We do so by checking if the value of the postion where walker2 now is, has a value of 1.

If it is indeed 1, we increase the count by 1.

We make them take 6000 steps.

At the end, we report the mean, variance and standard deviation of c since we see a range of values which cannot be captured by running the code just once.

'''






